{"version":3,"sources":["webpack:///./src/components/lightbox3.js","webpack:///./src/components/imagesnature.js","webpack:///./src/pages/nature.js"],"names":["Lightbox3","render","imagesIndex","this","props","react_default","a","createElement","className","map","image","key","node","childImageSharp","fluid","src","role","aria-label","id","gatsby_image_default","alt","title","Math","floor","random","Component","propTypes","PropTypes","array","isRequired","NatureImages","gatsby_browser_entry","query","data","lightbox3_Lightbox3","edges","_2290889949","Layout","children","Nature","layout","seo","keywords","style","color","padding","marginBottom","fontWeight","fontSize","imagesnature"],"mappings":"2MAIqBA,4FAKnBC,OAAA,WAAS,IACCC,EAAgBC,KAAKC,MAArBF,YAIR,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEdN,EAAYO,IAAI,SAAAC,GAAK,OACpBL,EAAAC,EAAAC,cAAA,OAAKI,IAAKD,EAAME,KAAKC,gBAAgBC,MAAMC,IAAKP,UAAU,oBACxDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,QAAMS,KAAK,MAAMC,aAAW,QAAQT,UAAU,mBAA9C,UAChCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKW,GAAG,iBACRb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEE,UAAU,iBACVG,IAAKD,EAAME,KAAKC,gBAAgBC,MAAMC,IACtCD,MAAOJ,EAAME,KAAKC,gBAAgBC,MAClCM,IAAI,mFACJC,MAAO,SAfVC,KAAKC,MAAsB,IAAhBD,KAAKE,UAemB,iCAvBTC,aAAlBzB,EACZ0B,UAAY,CACjBxB,YAAayB,IAAUC,MAAMC,YCFjC,IAoBeC,EApBM,kBACnBzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,MAAK,aAeL/B,OAAQ,SAAAgC,GAAI,OAAI5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAWvB,IAAKsB,EAAK/B,YAAYgB,GAAIhB,YAAa+B,EAAK/B,YAAYiC,SAhBrFF,KAAAG,KCgBFC,IAAOX,UAAY,CACfY,SAAUX,IAAUf,KAAKiB,YAGdU,UAlBA,kBACPlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACInC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAKpB,MAAM,SAASqB,SAAU,CAAC,QAAS,UAAV,sCAA6D,YAAa,UAAW,gBAAiB,UAAW,SAAU,aACzJrC,EAAAC,EAAAC,cAAA,OAAKW,GAAG,uBAAuBV,UAAU,aACzCH,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,MAAO,CAACC,MAAM,SAA1C,UACAvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBmC,MAAO,CAACE,QAAS,cAAeC,aAAa,MAA9E,qGACAzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcmC,MAAO,CAACI,WAAW,MAAMC,SAAS,WAAlE,qBAGR3C,EAAAC,EAAAC,cAAC0C,EAAD","file":"component---src-pages-nature-js-4c9be6fbc37433fad03c.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Img from 'gatsby-image';\r\n\r\nexport default class Lightbox3 extends Component {\r\n  static propTypes = {\r\n    imagesIndex: PropTypes.array.isRequired,\r\n  }\r\n\r\n  render() {\r\n    const { imagesIndex } = this.props;\r\n    function getRandom() {\r\n      return Math.floor(Math.random() * 100);\r\n    }\r\n    return (\r\n        <div className=\"grid-3\">\r\n          \r\n        {imagesIndex.map(image => (\r\n          <div key={image.node.childImageSharp.fluid.src} className=\"location-listing\">\r\n            <div className=\"location-title\"><span role=\"img\" aria-label=\"emoji\" className=\"description-img\">âœ‹ðŸ’œðŸ“·</span></div>\r\n            <div className=\"location-image\">\r\n              <div id=\"container-img\">\r\n              <Img\r\n                className=\"location-image\"\r\n                key={image.node.childImageSharp.fluid.src}\r\n                fluid={image.node.childImageSharp.fluid}\r\n                alt=\"Cette Photo Contient un ou plusieures personnes photographiÃ©es par Walid Khaladi\"\r\n                title={\"Photo \" + getRandom() + \" par Walid Khaladi\"} />\r\n              </div>\r\n              </div>\r\n          </div>\r\n        ))}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Lightbox3 from './lightbox3';\r\n\r\nconst NatureImages = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        imagesIndex: allFile(filter: {sourceInstanceName: { eq: \"images-nature\" }}) {\r\n          edges {\r\n            node {\r\n              childImageSharp {\r\n                fluid(maxWidth:2000) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Lightbox3 key={data.imagesIndex.id} imagesIndex={data.imagesIndex.edges} />}\r\n  />\r\n);\r\nexport default NatureImages;","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Images from \"../components/imagesnature\"\r\n\r\n\r\nconst Nature = () => (\r\n        <Layout>\r\n            <SEO title=\"Nature\" keywords={['Walid', 'Khaladi',`walidkhalladi`, `photographe`, `alger`, 'portfolio', 'website', 'professionnel', 'Naturel', 'Nature', 'modeles']}/>\r\n            <div id=\"text-container-fluid\" className=\"container\">\r\n            <section className=\"animation-box\">\r\n                    <h1 className=\"text-effect\" style={{color:'teal'}}>Nature</h1>\r\n                    <p className=\"text-effect-right\" style={{padding: '0.5rem 2rem', marginBottom:'0'}}>&rdquo; Ce qui reste Ã©ternellement incomprÃ©hensible dans la nature, c'est qu'on puisse la comprendre. &rdquo;</p>\r\n                    <figure className=\"text-effect\" style={{fontWeight:'300',fontSize:'0.9rem'}}>Albert Einstein</figure>\r\n                </section>\r\n            </div>\r\n            <Images />\r\n        </Layout>\r\n)\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n  }\r\n  \r\nexport default Nature\r\n"],"sourceRoot":""}